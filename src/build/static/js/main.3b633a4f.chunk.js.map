{"version":3,"sources":["Components/Calendar.js","Components/CreateAccount.js","Components/VerifySlack.js","App.js","index.js"],"names":["Calendar","calendarRef","React","createRef","componentDidMount","a","state","isAuthenticated","setState","rightToolbarButtonSetup","Cookies","get","fetch","method","credentials","fetchEvents","events","bind","handleEventClick","showEventModal","hideEventModal","showConfirmModal","hideConfirmModal","showAddModal","hideAddModal","processAdd","processCancel","handleLogout","handleLogin","showLoginModal","hideLoginModal","response","json","newEvent","title","start","end","arg","selectedEvent","event","addEvent","headers","body","JSON","stringify","username","password","updatedEvents","window","alert","eventToDelete","selectedEvent_fullCalendarObject","timezoneOffset","Date","getTimezoneOffset","style","height","plugins","dayGridPlugin","bootstrapPlugin","this","eventClick","ref","dayMaxEvents","fixedWeekCount","eventTimeFormat","hour","minute","meridiem","omitZeroMinute","customButtons","addEventButton","text","click","logoutButton","loginButton","headerToolbar","right","Modal","show","onHide","ModalHeader","ModalTitle","Button","variant","onClick","ModalBody","className","toLocaleString","ModalFooter","Form","Group","Label","Control","value","type","placeholder","onChange","target","href","htmlFor","name","selected","showTimeSelect","dateFormat","timeIntervals","date","Component","CreateAccount","handleCreateAccount","preventDefault","responseJSON","message","onSubmit","VerifySlack","handleVerifySlack","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b633a4f.chunk.js","sourcesContent":["import React from 'react';\nimport { Modal, Button, ModalTitle, ModalBody, ModalFooter, Form } from 'react-bootstrap';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ModalHeader from 'react-bootstrap/esm/ModalHeader';\nimport ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Cookies from 'js-cookie';\n\nexport default class Calendar extends React.Component {\n\n    calendarRef = React.createRef()\n\n    constructor() {\n        super();\n        this.state = {\n            events: [],\n            showEventModal: false,\n            selectedEvent: {},\n            selectedEvent_fullCalendarObject: {},\n            showConfirmModal: false,\n            showAddModal: false,\n            showLoginModal: false,\n            newEvent: {\n                title: '',\n                start: '',\n                end: '',\n            },\n            isAuthenticated: Cookies.get('cali-app-authenticated') || false,\n            rightToolbarButtonSetup: '',\n            timezoneOffset: new Date().getTimezoneOffset() / 60,\n            username: '',\n            password: '',\n        };\n\n        \n    }\n\n    componentDidMount = async () => {\n\n        let events;\n\n        if (this.state.isAuthenticated) {\n            this.setState({\n                rightToolbarButtonSetup: 'prev,next today addEventButton logoutButton'\n            });\n        } else {\n            if (Cookies.get('cali-app-refresh-exists')) {\n\n                await fetch('/token', {\n                    method: 'post',\n                    credentials: 'include',\n                });\n\n                let isAuthenticated = Cookies.get('cali-app-authenticated');\n                if (isAuthenticated) {\n                    this.setState({\n                        isAuthenticated: isAuthenticated,\n                        rightToolbarButtonSetup: 'prev,next today addEventButton logoutButton'\n                    });\n                } else {\n                    this.setState({\n                        rightToolbarButtonSetup: 'prev,next today addEventButton loginButton'\n                    });\n                }\n            } else {\n                this.setState({\n                    rightToolbarButtonSetup: 'prev,next today addEventButton loginButton'\n                });\n            }\n        }\n\n        if (this.state.isAuthenticated) {\n            events = await this.fetchEvents();\n        } else {\n            events = [];\n        }\n\n        this.setState({ events: events });\n        \n        this.fetchEvents = this.fetchEvents.bind(this);\n        this.handleEventClick = this.handleEventClick.bind(this);\n        this.showEventModal = this.showEventModal.bind(this);\n        this.hideEventModal = this.hideEventModal.bind(this);\n        this.showConfirmModal = this.showConfirmModal.bind(this);\n        this.hideConfirmModal = this.hideConfirmModal.bind(this);\n        this.showAddModal = this.showAddModal.bind(this);\n        this.hideAddModal = this.hideAddModal.bind(this);\n\n        this.processAdd = this.processAdd.bind(this);\n        this.processCancel = this.processCancel.bind(this);\n\n        this.handleLogout = this.handleLogout.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n\n        this.showLoginModal = this.showLoginModal.bind(this);\n        this.hideLoginModal = this.hideLoginModal.bind(this);\n    }\n\n    fetchEvents = async () => {\n        const response = await fetch('/api/events/get?username=userone', {\n            method: 'get',\n            credentials: 'include'\n        });\n        const events = await response.json();\n        return events.events;\n    };\n\n    showEventModal = () => {\n        this.setState({ showEventModal: true });\n    }\n\n    hideEventModal = () => {\n        this.setState({ showEventModal: false });\n    }\n\n    showConfirmModal = () => {\n        this.hideEventModal();\n        this.setState({ showConfirmModal: true });\n    }\n\n    hideConfirmModal = () => {\n        this.setState({ showConfirmModal: false});\n        this.showEventModal();\n    }\n\n    showAddModal = () => {\n        this.setState({ \n            newEvent: {\n                title: '',\n                start: '',\n                end: '',\n            },\n            showAddModal: true \n        });\n    }\n\n    hideAddModal = () => {\n        this.setState({ showAddModal: false});\n    }\n\n    showLoginModal = () => {\n        this.setState({ showLoginModal: true });\n    }\n\n    hideLoginModal = () => {\n        this.setState({ showLoginModal: false });\n    }\n\n    handleEventClick = (arg) => {\n        this.showEventModal();\n        \n        this.setState({ \n            selectedEvent: {\n                title: arg.event.title,\n                start: arg.event.start,\n                end: arg.event.end\n            },\n        });\n\n    }\n\n    addEvent = () => {\n        this.showAddModal();\n    }\n\n    handleLogin = async () => {\n        await fetch('/account/login', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password\n            })\n        });\n\n        this.setState({\n            username: '',\n            password: ''\n        });\n\n        if (Cookies.get('cali-app-authenticated')) {\n            const updatedEvents = await this.fetchEvents();\n\n            this.setState({\n                events: updatedEvents,\n                isAuthenticated: Cookies.get('cali-app-authenticated'),\n                showLoginModal: false,\n                rightToolbarButtonSetup: 'prev,next today addEventButton logoutButton'\n            });\n\n        }\n    }\n\n    handleLogout = async () => {\n        await fetch('/account/logout', {\n            method: 'post',\n            credentials: 'include',\n        });\n\n        this.setState({\n            events: [],\n            isAuthenticated: false,\n            rightToolbarButtonSetup: 'prev,next today addEventButton loginButton'\n        });\n\n\n    }\n\n    processAdd = async () => {\n\n        if (this.state.newEvent.title !== '') {\n            \n            await fetch('/api/events/add/', {\n                method: 'post',\n                credentials: 'include',\n                body: JSON.stringify({\n                    username: this.state.username,\n                    newEvent: this.state.newEvent\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n    \n            const updatedEvents = await this.fetchEvents();\n    \n            this.setState({ \n                events: updatedEvents,\n                showAddModal: false,\n            });\n        } else {\n            window.alert(\"Event must have a title\");\n        }\n        \n    }\n\n    processCancel = async () => {\n        await fetch('/api/events/cancel/', {\n            method: 'post',\n            credentials: 'include',\n            body: JSON.stringify({\n                username: this.state.username,\n                eventToDelete: this.state.selectedEvent\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n\n        const updatedEvents = await this.fetchEvents();\n\n        this.setState({ \n            events: updatedEvents,\n            showConfirmModal: false,\n        });\n    }\n\n    render() {\n        return (\n            <>\n            <div style={ { height: \"80vh\" } }>\n                <FullCalendar \n                    plugins={ [dayGridPlugin, bootstrapPlugin] } \n                    events={ this.state.events } \n                    height= \"100%\"\n                    eventClick = { this.handleEventClick }\n                    ref = { this.calendarRef }\n                    dayMaxEvents= {4}\n                    fixedWeekCount= {false}\n                    eventTimeFormat= {\n                        {\n                            hour: 'numeric',\n                            minute: '2-digit',\n                            meridiem: 'short',\n                            omitZeroMinute: false,\n                        }\n                    }\n                    customButtons= {\n                        {\n                            addEventButton: {\n                                text: 'Add Event',\n                                click: this.addEvent\n                            },\n                            logoutButton: {\n                                text: 'Log out',\n                                click: this.handleLogout\n                            },\n                            loginButton: {\n                                text: 'Log in',\n                                click: this.showLoginModal\n                            }\n                        }\n                    }\n                    headerToolbar= {\n                        {\n                            right: `${this.state.rightToolbarButtonSetup}`\n                        }\n                    }\n                />\n            </div>\n\n            <Modal show={this.state.showEventModal} onHide={this.hideEventModal}>\n                <ModalHeader>\n                    <ModalTitle>{this.state.selectedEvent.title}</ModalTitle>\n                    <Button variant=\"close\" onClick={this.hideEventModal}></Button>\n                </ModalHeader>\n\n                <ModalBody>\n                    <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            Start:\n                        </div>\n                        <div className=\"col-md-8\">\n                            {new Date(this.state.selectedEvent.start).toLocaleString()}\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            End:\n                        </div>\n                        <div className=\"col-md-8\">\n                            {new Date(this.state.selectedEvent.end).toLocaleString()}\n                        </div>\n                    </div>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button variant=\"danger\" onClick={this.showConfirmModal}>\n                        Cancel Event\n                    </Button>\n                </ModalFooter>\n\n            </Modal>\n\n            <Modal show={this.state.showConfirmModal} onHide={this.hideConfirmModal}>\n                <ModalBody>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h4>Are you sure you want to cancel this event?</h4>\n                        </div>\n                    </div>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button variant=\"danger\" onClick={this.processCancel}>\n                        Yes\n                    </Button>\n                    <Button variant=\"secondary\" onClick={this.hideConfirmModal}>\n                        No\n                    </Button>\n                </ModalFooter>\n            </Modal>\n\n            <Modal show={this.state.showLoginModal} onHide={this.hideLoginModal}>\n                <ModalBody>\n                    <Form className=\"mx-auto my-auto\">\n\n                        <Form.Group className=\"mb-3 text-center\">\n                            <h1>Calendar-App</h1>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Username:</Form.Label>\n                            <Form.Control value={this.state.username} type=\"text\" placeholder=\"Enter Username\" onChange={event => this.setState({\n                                username: event.target.value\n                            })}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Password:</Form.Label>\n                            <Form.Control value={this.state.password} type=\"password\" placeholder=\"Enter Password\" onChange={event => this.setState({\n                                password: event.target.value\n                            })}/>\n                        </Form.Group>\n\n                        <div className=\"text-start m-0\">\n                            <p className=\"m-0\">\n                                <a className=\"text-secondary\" href=\"./account/register\">Create an Account</a>\n                            </p>\n                        </div>\n\n                    </Form>\n\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button variant=\"primary\" onClick={this.handleLogin}>\n                        Log In\n                    </Button>\n                </ModalFooter>\n            </Modal>\n\n\n            <Modal show={this.state.showAddModal} onHide={this.hideAddModal}>\n                <ModalBody>\n                    <form className=\"form\">\n\n                        <div className=\"row mt-2\">\n                            <div className=\"col-md-12\">\n                                <label className=\"form-label\" htmlFor=\"title\">Title: </label>\n                                <input type=\"text\" className=\"form form-control\" name=\"title\" \n                                    onChange={(event) => this.setState({ \n                                        newEvent: {\n                                            title: event.target.value,\n                                            start: this.state.newEvent.start,\n                                            end: this.state.newEvent.end\n                                            }\n                                        })\n                                    }\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"row mt-2\">\n                            <div className=\"col-md-12\">\n                                <label className=\"form-label\" htmlFor=\"startDate\">Start: </label>\n                                <ReactDatePicker \n                                    className= \"form form-control\" \n                                    selected= {this.state.newEvent.start}\n                                    showTimeSelect\n                                    dateFormat= \"Pp\"\n                                    timeIntervals= {15}\n                                    onChange={(date) => (\n                                        this.setState({\n                                            newEvent: {\n                                                title: this.state.newEvent.title,\n                                                start: date,\n                                                end: this.state.newEvent.end\n                                            }\n                                        })\n                                    )}\n                                />\n                            </div>\n                        </div>\n                        \n                        <div className=\"row mt-2\">\n                            <div className=\"col-md-12\">\n                                <label className=\"form-label\" htmlFor=\"endDate\">End: </label>\n                                <ReactDatePicker \n                                    className= \"form form-control\" \n                                    selected = {this.state.newEvent.end}\n                                    showTimeSelect\n                                    dateFormat= \"Pp\"\n                                    timeIntervals= {15}\n                                    onChange={(date) => (\n                                        this.setState({\n                                            newEvent: {\n                                                title: this.state.newEvent.title,\n                                                start: this.state.newEvent.start,\n                                                end: date\n                                            }\n                                        })\n                                    )}\n                                />\n                            </div>\n                        </div>\n\n                    </form>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button variant=\"success\" onClick={this.processAdd}>\n                        Add Event\n                    </Button>\n                    <Button variant=\"secondary\" onClick={this.hideAddModal}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </Modal>\n\n            </>\n        );\n    }\n}","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nexport default class CreateAccount extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: ''\n        }\n\n        this.handleCreateAccount = this.handleCreateAccount.bind(this);\n    }\n\n    handleCreateAccount = async (event) => {\n        event.preventDefault();\n        const response = await fetch('../account/register', {\n            method: 'post',\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password\n            }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        \n        const responseJSON = await response.json();\n        alert(responseJSON.message);\n\n        this.setState({\n            username: '',\n            password: ''\n        });\n\n        \n    }\n\n    render() {\n        return (\n            <>\n            <div className=\"\">\n                <Form className=\"w-25 mx-auto my-auto\" onSubmit={this.handleCreateAccount}>\n                    <Form.Group className=\"mb-3 text-center\">\n                        <h4>Create an Account</h4>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Username:</Form.Label>\n                        <Form.Control value={this.state.username} type=\"text\" placeholder=\"Enter Username\" onChange={event => this.setState({ username: event.target.value })}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Password:</Form.Label>\n                        <Form.Control value={this.state.password} type=\"password\" placeholder=\"Enter Password\" onChange={event => this.setState({ password: event.target.value })}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3 text-center\">\n                        <Button className=\"w-100\" variant=\"primary\" type=\"submit\">Create</Button>\n                    </Form.Group>\n                </Form>\n            </div>\n            \n            </>\n        )\n    }\n}","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nexport default class VerifySlack extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: ''\n        }\n\n        this.handleVerifySlack = this.handleVerifySlack.bind(this);\n    }\n\n    handleVerifySlack = async (event) => {\n        event.preventDefault();\n        const response = await fetch('../account/slack/verify', {\n            method: 'post',\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password\n            }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        this.setState({\n            username: '',\n            password: ''\n        });\n\n        const responseJSON = await response.json();\n        alert(responseJSON.message);\n    }\n\n    render() {\n        return (\n            <>\n            <div className=\"\">\n                <Form className=\"w-25 mx-auto my-auto\" onSubmit={this.handleVerifySlack}>\n                    <Form.Group className=\"mb-3 text-center\">\n                        <h4>Verify Your Slack Account</h4>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Username:</Form.Label>\n                        <Form.Control value={this.state.username} type=\"text\" placeholder=\"Enter Username\" onChange={event => this.setState({ username: event.target.value })}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Password:</Form.Label>\n                        <Form.Control value={this.state.password} type=\"password\" placeholder=\"Enter Password\" onChange={event => this.setState({ password: event.target.value })}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3 text-center\">\n                        <Button className=\"w-100\" variant=\"primary\" type=\"submit\">Verify</Button>\n                    </Form.Group>\n                </Form>\n            </div>\n            \n            </>\n        )\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Calendar from './Components/Calendar.js';\nimport CreateAccount from './Components/CreateAccount.js';\nimport VerifySlack from './Components/VerifySlack.js';\n\nfunction App() {\n    \n    return (\n        <Router>\n        <div className=\"App\">\n        <Switch>\n        <Route path=\"/\" component={Calendar} exact/>\n        <Route path=\"/verify/slack\" component={VerifySlack}/>\n        <Route path=\"/account/register\" component={CreateAccount}/>\n        </Switch>\n        </div>\n        </Router>\n        \n        );\n    }\n    \n    export default App;\n    ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}